"use strict";(self.webpackChunklinux_tutorial=self.webpackChunklinux_tutorial||[]).push([[28],{7366:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var a=s(4848),r=s(8453);const t={title:"Apache webserver",sidebar_label:"Apache"},c=void 0,i={id:"apache",title:"Apache webserver",description:"Web server is a piece of software that listens for web requests (via browser,",source:"@site/docs/apache.md",sourceDirName:".",slug:"/apache",permalink:"/linux/apache",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/linux/blob/main/docs/apache.md",tags:[],version:"current",frontMatter:{title:"Apache webserver",sidebar_label:"Apache"},sidebar:"docs",previous:{title:"Network security",permalink:"/linux/network-security"},next:{title:"NextCloud",permalink:"/linux/nextcloud"}},o={},l=[{value:"Server logs",id:"server-logs",level:2},{value:"Create a self-signed certificate",id:"create-a-self-signed-certificate",level:2},{value:"Setting up apache in CentOS/Fedora",id:"setting-up-apache-in-centosfedora",level:2},{value:"Security hardening",id:"security-hardening",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Web server is a piece of software that listens for web requests (via browser,\napplications, or tools like wget and curl) and responds to it. A server can be\nstatic or dynamic. Static servers response with prebuilt files as is. While\ndynamic servers builds webpages on-demand based on the user requests and\npossibly acquiring data from a database."}),"\n",(0,a.jsxs)(n.p,{children:["First, we need a server software package. There are a few popular ones like\n",(0,a.jsx)(n.strong,{children:"apache"})," and ",(0,a.jsx)(n.strong,{children:"nginx"}),". Here we will try to setup an ",(0,a.jsx)(n.strong,{children:"apache"})," on a Ubuntu\nmachine. We can install from our package manager:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get install apache2\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can start, restart or stop the server using following commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo service apache2 start\nsudo service apache2 restart\nsudo service apache2 stop\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can check the status of apache whether running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"service apache2 status\nservice --status-all\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once the server is started, you can visit your ip address: ",(0,a.jsx)(n.code,{children:"http://xxx.xx.x.xxx"}),"\nusing a browser and you will see a pre-configured webpage."]}),"\n",(0,a.jsxs)(n.p,{children:["If you want to serve your own page just replace the ",(0,a.jsx)(n.code,{children:"index.html"})," file located in\nthe ",(0,a.jsx)(n.code,{children:"/var/www/html/"})," directory. Not only the ",(0,a.jsx)(n.code,{children:"index.html"}),", but you can have a\nfull website with directory structure and css and javascript. This is basically\nall you need to do setting up and running a simple website. But there is a whole\nlot more about server to explore."]}),"\n",(0,a.jsxs)(n.p,{children:["The main server configuration file is located at ",(0,a.jsx)(n.code,{children:"/etc/apache2/apache2.conf"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"server-logs",children:"Server logs"}),"\n",(0,a.jsxs)(n.p,{children:["Apache has two logs: ",(0,a.jsx)(n.em,{children:"access.log"})," and ",(0,a.jsx)(n.em,{children:"error.log"}),". We can look them up in the\n",(0,a.jsx)(n.code,{children:"/var/log/apache2"})," directory."]}),"\n",(0,a.jsx)(n.h2,{id:"create-a-self-signed-certificate",children:"Create a self-signed certificate"}),"\n",(0,a.jsx)(n.p,{children:"In general, you have a get a certificate from a certificate authority. But you\ncan self-sign a certificate for your own purpose."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -out ca.key 2048\nopenssl req -new -key ca.key -out ca.csr\nopenssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-up-apache-in-centosfedora",children:"Setting up apache in CentOS/Fedora"}),"\n",(0,a.jsx)(n.p,{children:"Installation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sudo dnf groupinstall "Basic web server"\nsudo systemctl start httpd\nsudo systemctl restart httpd\nsudo systemctl stop httpd\nsystemctl status httpd\n'})}),"\n",(0,a.jsx)(n.p,{children:"Set DNS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo vi /etc/httpd/conf/httpd.conf\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In Ubuntu, it is in ",(0,a.jsx)(n.code,{children:"/etc/apache2/apache2.conf"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Add correct ServerName and restart httpd"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ServerName ec2-xx-xxx-xx-xx.ap-southeast-1.compute.amazonaws.com\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note that if you are using AWS or another cloud service to host your server, you\nmay need to add HTTP/HTTPS rule for inbound traffic in the security policy\nbefore you can access over internet."}),"\n",(0,a.jsx)(n.h2,{id:"security-hardening",children:"Security hardening"}),"\n",(0,a.jsxs)(n.p,{children:["Open ",(0,a.jsx)(n.code,{children:"/etc/httpd/conf/httpd.conf"})," and consider following settings:"]}),"\n",(0,a.jsx)(n.p,{children:"Disable trace route:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"TraceEnable off\n"})}),"\n",(0,a.jsx)(n.p,{children:"Disable server banner that will hide the apache version:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ServerSignature Off\nServerTokens Prod\n"})}),"\n",(0,a.jsx)(n.p,{children:"Disable directory listing:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"<Directory />\nOptions None\nOrder allow,deny\nAllow from all\n</Directory>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Limit allowed HTTP methods:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"<Directory />\n    <LimitExcept GET HEAD>\n        deny from all\n    </LimitExcept>\n</Directory>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Disable Etag:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"FileETag None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Protection against click-jacking:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'Header set X-Frame-Options "DENY"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Always keep your system up to date."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var a=s(6540);const r={},t=a.createContext(r);function c(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);