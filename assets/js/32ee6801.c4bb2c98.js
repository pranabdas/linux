"use strict";(self.webpackChunklinux_tutorial=self.webpackChunklinux_tutorial||[]).push([[987],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9550:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={title:"The commandline",sidebar_label:"Commandline",keywords:["linux","unix","commandline","shell","ssh","sed","grep","wget","openssl"]},s=void 0,p={unversionedId:"commandline",id:"commandline",title:"The commandline",description:"Navigating around",source:"@site/docs/commandline.md",sourceDirName:".",slug:"/commandline",permalink:"/linux/commandline",draft:!1,editUrl:"https://github.com/pranabdas/linux/blob/main/docs/commandline.md",tags:[],version:"current",frontMatter:{title:"The commandline",sidebar_label:"Commandline",keywords:["linux","unix","commandline","shell","ssh","sed","grep","wget","openssl"]},sidebar:"docs",previous:{title:"Welcome",permalink:"/linux/"},next:{title:"Vi editor",permalink:"/linux/vi"}},u={},m=[{value:"Navigating around",id:"navigating-around",level:2},{value:"Files and folders",id:"files-and-folders",level:2},{value:"tar",id:"tar",level:2},{value:"zip",id:"zip",level:2},{value:"find",id:"find",level:2},{value:"grep",id:"grep",level:2},{value:"sed",id:"sed",level:2},{value:"wget",id:"wget",level:2},{value:"ssh",id:"ssh",level:2},{value:"diff",id:"diff",level:2},{value:"openssl",id:"openssl",level:2},{value:"File permissions",id:"file-permissions",level:2},{value:"rsync",id:"rsync",level:2},{value:"Processes",id:"processes",level:2},{value:"tmux",id:"tmux",level:2},{value:"Terminal shortcuts",id:"terminal-shortcuts",level:2},{value:"Learn more",id:"learn-more",level:2}],d={toc:m};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"navigating-around"},"Navigating around"),(0,r.kt)("p",null,"Print current working directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pwd\n")),(0,r.kt)("p",null,"List files and folders current directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls\n")),(0,r.kt)("p",null,"List a directory with more details:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -l\n")),(0,r.kt)("p",null,"Above ",(0,r.kt)("inlineCode",{parentName:"p"},"-l")," stands for long. In some shells, the above command is aliased to\n",(0,r.kt)("inlineCode",{parentName:"p"},"ll"),"."),(0,r.kt)("p",null,"List hidden (all) files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -la\n")),(0,r.kt)("p",null,"You can list not only current directory but another directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls sub_directory\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Common ",(0,r.kt)("inlineCode",{parentName:"strong"},"ls")," options:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-a"),(0,r.kt)("td",{parentName:"tr",align:null},"List all files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-h"),(0,r.kt)("td",{parentName:"tr",align:null},"Display file sizes in more human readable format instead of bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-l"),(0,r.kt)("td",{parentName:"tr",align:null},"Long format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-r"),(0,r.kt)("td",{parentName:"tr",align:null},"Reverse order")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-S"),(0,r.kt)("td",{parentName:"tr",align:null},"Sort by size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-t"),(0,r.kt)("td",{parentName:"tr",align:null},"Sort by time")))),(0,r.kt)("p",null,"Your current directory is denoted by ",(0,r.kt)("inlineCode",{parentName:"p"},"."),", and parent directory by ",(0,r.kt)("inlineCode",{parentName:"p"},"..")),(0,r.kt)("p",null,"There is a nice utility ",(0,r.kt)("strong",{parentName:"p"},"tree")," which displays the tree structure of a\ndirectory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tree\ntree -aCd -L 2 /\n")),(0,r.kt)("p",null,"Change directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd home\ncd ..\n")),(0,r.kt)("p",null,"Go to previous working directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd -\n")),(0,r.kt)("p",null,"Go to home directory (any of the below):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd\ncd ~\n")),(0,r.kt)("h2",{id:"files-and-folders"},"Files and folders"),(0,r.kt)("p",null,"Determine a file content with ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"file profile.jpg\n")),(0,r.kt)("p",null,"Copy ",(0,r.kt)("inlineCode",{parentName:"p"},"file_original")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"file_final"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp file_original file_final\n")),(0,r.kt)("p",null,"Move file or directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mv file_source file_destination\n")),(0,r.kt)("p",null,"Copy a directory along with the contents inside recursively:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r source_path destination_path\n")),(0,r.kt)("p",null,"Sometimes we need to copy files along with permissions, timestamps, and other\nattributes, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-p")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp -rp source_path destination_path\n")),(0,r.kt)("p",null,"Create new directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir new_dir\n")),(0,r.kt)("p",null,"Delete a directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf my_dir\n")),(0,r.kt)("p",null,"Delete an empty directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rmdir empty_dir\n# or use its alias\nrd empty_dir\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"One of the fastest way to delete a large directory:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir empty && \\\n  rsync -r --delete empty/ large_dir && \\\n  rm -r large_dir empty\n"))),(0,r.kt)("p",null,"Disk usage, find folder size:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"du -hs\ndu -hs path/\n\n# list all folders with wild card\ndu -hs *\n\n# list folder sizes and sort\ndu -hs * | sort -n\n\n# total usage line in the end\ndu -hsc *\n\n# list sizes by controlling depth\ndu -d 2 -h\n")),(0,r.kt)("p",null,"Display string/variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo string\necho $variable\n\n# with variable expansion\necho ${variable}\n\n# write/rewrite to a file\necho string > file\n\n# append to an existing file\necho string >> existing-file\n")),(0,r.kt)("p",null,"Print (concatenate the contents to the standard output) the contents of a file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat file.txt\n")),(0,r.kt)("p",null,"Print only the head (default first 10 lines) of a file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"head file.txt\n")),(0,r.kt)("p",null,"You can print particular number of lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"head -20 file.txt\n")),(0,r.kt)("p",null,"Print as much as fits in the shell window:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"more file.txt\n")),(0,r.kt)("p",null,"See the end of a file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tail file.txt\ntail -20 file.txt\n")),(0,r.kt)("p",null,"Print the contents to a file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat file.txt > file-copy.txt\n")),(0,r.kt)("p",null,"This seems same as copy. But you can use this to combine multiple files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat file.txt, file2.txt > file-copy.txt\n")),(0,r.kt)("p",null,"Instead of overwriting file, you can append:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat file3.txt >> file-copy.txt\n")),(0,r.kt)("p",null,"You can use ",(0,r.kt)("em",{parentName:"p"},"paste")," to combine files as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"paste file* > file-all.txt\n")),(0,r.kt)("p",null,"Text redirect with ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "something" | sudo tee /ect/something.config\n')),(0,r.kt)("p",null,"Redirect multiple lines with ",(0,r.kt)("inlineCode",{parentName:"p"},"cat"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# cat << EOF > test.txt\ncat > test.txt << EOF\nHello World!\nHave a good day.\nEOF\n")),(0,r.kt)("p",null,"Redirect multiple lines with ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo")," privilege:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat << EOF | sudo tee /etc/jupyter/jupyter_server_config.py > /dev/null\nc.ServerApp.ip = '0.0.0.0'\nc.ServerApp.allow_root = True\nc.ServerApp.open_browser = False\nEOF\n")),(0,r.kt)("p",null,"Look for lines containing certain word. This will list the lines that contain\nthe word ",(0,r.kt)("em",{parentName:"p"},"file")," in the ",(0,r.kt)("em",{parentName:"p"},"cat")," manual:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"man cat | grep file\n")),(0,r.kt)("p",null,"Working with large files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"less file.txt\nman top | less\ncat file.txt | less\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Common ",(0,r.kt)("inlineCode",{parentName:"strong"},"less")," keyboard shortcuts:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Shortcut"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"space"),(0,r.kt)("td",{parentName:"tr",align:null},"Scroll forward one page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"b"),(0,r.kt)("td",{parentName:"tr",align:null},"Scroll back one page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"G"),(0,r.kt)("td",{parentName:"tr",align:null},"Move to the end of file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"g"),(0,r.kt)("td",{parentName:"tr",align:null},"Move to the beginning of file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"/char"),(0,r.kt)("td",{parentName:"tr",align:null},"Search forward")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"n"),(0,r.kt)("td",{parentName:"tr",align:null},"Search for next occurrence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"q"),(0,r.kt)("td",{parentName:"tr",align:null},"Quit")))),(0,r.kt)("p",null,"Redirecting output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# throw away output\nnpm install &> /dev/null\n")),(0,r.kt)("p",null,"Writing stdout and stderr to a file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install &> log.txt\n\n# or\nnpm install >log.txt 2>&1\n\n# write to separate files\nnpm install > result_log.txt 2> error_log.txt\n\n# throw away stderr\nnpm install > result_log.txt 2> /dev/null\n\nnpm install 2>&1 > result_log.txt\n")),(0,r.kt)("p",null,"Create symbolic links:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ln -s /path/to/file.txt /path/to/link.txt\n")),(0,r.kt)("p",null,"Bash expansion: If you need to create/copy/move/delete a series of files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch file_{01..05}.txt\n")),(0,r.kt)("p",null,"It will create file_01.txt, file_02.txt and so on."),(0,r.kt)("p",null,"Recall previous command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apt update\nsudo !!\n")),(0,r.kt)("h2",{id:"tar"},"tar"),(0,r.kt)("p",null,"Create a tar archive of files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -czvf files.tar.gz file1.pdf file2.pdf\n")),(0,r.kt)("p",null,"Create a tar archive of a directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -czvf files.tar.gz /home/files\n")),(0,r.kt)("p",null,"Untar an archive:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xzvf files.tar.gz\n")),(0,r.kt)("p",null,"Extract on a different directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xzvf files.tar.gz -C /tmp/\n")),(0,r.kt)("p",null,"List contents of a tar file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -tf files.tar.gz\n")),(0,r.kt)("h2",{id:"zip"},"zip"),(0,r.kt)("p",null,"If you have got a zip file to unzip. You need to install ",(0,r.kt)("em",{parentName:"p"},"unzip"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install zip unzip\nsudo dnf install zip unzip\n")),(0,r.kt)("p",null,"Then:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"unzip filename.zip\nunzip filename.zip -d /home/destination\n\n# see contents of zip file without unzipping\nunzip -l filename.zip\n")),(0,r.kt)("p",null,"Zip file(s) or folders:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"zip output.zip file1.txt file2.md\nzip -r output.zip source_dir\nzip -rq output.zip source_dir\n")),(0,r.kt)("p",null,"Verify the checksum"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"md5 path/file.iso\nshasum -a 256 path/file.iso\nshasum -a 512 path/file.iso\n")),(0,r.kt)("h2",{id:"find"},"find"),(0,r.kt)("p",null,"Search for files using ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"find /home/pranab -type f -name profile.jpg\n\n# find in several directories\nfind /home/pranab /users/pranab -type f -name profile.jpg\n\n# case insensitive search\nfind /home/pranab -type f -iname profile.jpg\n\n# by filetype\nfind /home/pranab -type f -name *.pdf\n")),(0,r.kt)("p",null,"Useful ",(0,r.kt)("inlineCode",{parentName:"p"},"-type")," flags: ",(0,r.kt)("inlineCode",{parentName:"p"},"f"),": regular files, ",(0,r.kt)("inlineCode",{parentName:"p"},"d"),": directory, ",(0,r.kt)("inlineCode",{parentName:"p"},"l"),": symbolic link."),(0,r.kt)("p",null,"Find by file permission:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"find . -perm 0600  -print\nfind . -perm 0644  -type f -name tests.py -print\n\n# without permission\nfind . -type f ! -perm 777\n\n# find all executables\nfind . -perm /a=x\n")),(0,r.kt)("p",null,"Find by file size:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"find /tmp -type f -size 1024c\n\n# less than 1 megabyte\nfind . -type f -size -1M\n\n# bigger than 1 kilobyte\nfind . -type f -size +1k\n\n# between 512 MB and 1 GB\nfind . -type f -size +512M -size -1G\n")),(0,r.kt)("p",null,"Find files based on modification time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# find files modified in last 7 days\nfind . -name "*.md" -mtime 7\n\n# modified in last hour\nfind . -name "*.md" -mmin 60\n\n# last modified more than 7 days before\nfind . -name "*.md" -mtime +7 -daystart\n')),(0,r.kt)("p",null,"Find and delete file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"find . -type f -name .DS_Store -delete\n")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Run above command with caution. First run the command without the ",(0,r.kt)("inlineCode",{parentName:"p"},"-delete")," flag\nto be sure what your are deleting. If the expression prior to ",(0,r.kt)("inlineCode",{parentName:"p"},"-delete")," is what\nyou did not mean, it could delete something that you did not want.")),(0,r.kt)("p",null,"Look for multiple filetype at once:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"find . -type f \\( -name \\*.jpg -o -name \\*.png \\)\n")),(0,r.kt)("h2",{id:"grep"},"grep"),(0,r.kt)("p",null,"Find specific string/words in a file or set of files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'grep estimation output.txt\ngrep "energy estimation" output.txt\n\n# find in multiple files\ngrep estimation output.txt output2.txt\n\n# find in all files in a directory\ngrep estimation *\n\n# ignore case\ngrep -i estimation *\n\n# search subdirectories\ngrep -r estimation *\n\n# list of matching files\ngrep -l estimation *\n\n# count number of matches\ngrep -c estimation *\n\n# search for multiple strings\ngrep -e estimation -e "total energy" *\n')),(0,r.kt)("h2",{id:"sed"},"sed"),(0,r.kt)("p",null,"Use ",(0,r.kt)("strong",{parentName:"p"},"s"),"tream ",(0,r.kt)("strong",{parentName:"p"},"ed"),"itor to find and replace text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# substitute first string occurrence in every line\nsed s/pattern/replace_string/ file.txt\n\n# substitute all string occurrences in every line\nsed s/pattern/replace_string/g file.txt\n\n# substitute al string occurrences in range of lines\nsed 1,5s/pattern/replace_string/g file.txt\n\n# case insensitive search\nsed s/pattern/replace_string/gI file.txt\n\n# write the output to a file\nsed s/pattern/replace_string/gI file.txt > newfile.txt\n\n# save changes to the same file\nsed -i.bak s/pattern/replace_string/gI file.txt\n")),(0,r.kt)("p",null,"In the last command it will create a backup of the original file named\n",(0,r.kt)("inlineCode",{parentName:"p"},"file.txt.bak"),"."),(0,r.kt)("h2",{id:"wget"},"wget"),(0,r.kt)("p",null,"Download a file using ",(0,r.kt)("inlineCode",{parentName:"p"},"wget"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://example.com/pic.jpg\n")),(0,r.kt)("p",null,"Download and save to a path/name:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://example.com/pic.jpg -O images/profile.jpg\n")),(0,r.kt)("p",null,"Continue with interrupted download:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -c http://example.com/file.ext\n")),(0,r.kt)("p",null,"Mirror a website locally using wget:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'wget --mirror \\\n  --convert-links \\\n  --html-extension \\\n  --wait=1 \\\n  --user-agent="Mozilla/5.0 (Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0" \\\n  -o log \\\n  http://example.com\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--convert-links")," will convert the links suitable for viewing with local paths;\n",(0,r.kt)("inlineCode",{parentName:"p"},"--html-extensions")," will handle if there are no extension at the end of URLs;\n",(0,r.kt)("inlineCode",{parentName:"p"},"--wait")," to specify waiting time between successive retrievals in seconds."),(0,r.kt)("h2",{id:"ssh"},"ssh"),(0,r.kt)("p",null,"ssh can be used to connect to remote machines. First make sure you have the ssh\ninstalled in your machines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install --no-install-recommends openssh-server\n")),(0,r.kt)("p",null,"You need to know the IP address or hostname of remote machine:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ip addr\n")),(0,r.kt)("p",null,"Connecting to a ssh server:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh <username>@<xxx.xx.xx.xxx> -p <yyyy>\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"xxx.xx.xx.xxx")," is the IP address and ",(0,r.kt)("inlineCode",{parentName:"p"},"yyyy")," is the port number."),(0,r.kt)("p",null,"You can disconnect from the remote ssh by pressing ",(0,r.kt)("strong",{parentName:"p"},"[control]","+","[d]")," or typing\n",(0,r.kt)("inlineCode",{parentName:"p"},"exit")," on the terminal."),(0,r.kt)("p",null,"Running ssh server on Windows Subsystem for Linux. Open the following file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo vi /etc/ssh/sshd_config\n")),(0,r.kt)("p",null,"Change the port to anything above ",(0,r.kt)("inlineCode",{parentName:"p"},"1000")," (default ",(0,r.kt)("inlineCode",{parentName:"p"},"22")," might conflict with host\nWindows system if you are using WSL).\nChange ",(0,r.kt)("inlineCode",{parentName:"p"},"PasswordAuthentication yes"),"\nAdd ",(0,r.kt)("inlineCode",{parentName:"p"},"AllowUsers <your username>")),(0,r.kt)("p",null,"Save and exit. Following commands should be self explanatory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"service ssh status\nsudo service ssh start\nsudo service ssh stop\nsudo service ssh --full-restart\n")),(0,r.kt)("p",null,"Port forwarding. Let's say you are working on a python jupyter notebook on the\nremote server via ssh and you want to see the notebook in your local browser.\nYou can forward the specific port to your local machine:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -L 8888:127.0.0.1:8888 pranab@xxx.xx.x.xxx -p yyyy -i ~/.ssh/id_rsa\n")),(0,r.kt)("p",null,"Now you can see the notebook in your client machine."),(0,r.kt)("p",null,"Adding SSH key-pair to connect to a server. Generate the key-pair in your client\ncomputer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen\n")),(0,r.kt)("p",null,"You may leave everything default and press enter. It will generate public and\nprivate key pair inside ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.ssh")," directory. Now we need to copy the public key\nto the host machine. Connect to remote host using password. Create a ",(0,r.kt)("inlineCode",{parentName:"p"},".ssh"),"\ndirectory in the remote home directory. You can print the public key in your\nterminal ",(0,r.kt)("inlineCode",{parentName:"p"},"cat id_rsa.pub")," and copy it to clipboard."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh <username>@<xxx.xx.xx.xxx> -p <yyyy>\nmkdir .ssh\nvi .ssh/authorized_keys\n")),(0,r.kt)("p",null,"Paste the public key, save and exit. Then open ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/ssh/sshd_config")," with\n",(0,r.kt)("inlineCode",{parentName:"p"},"sudo vi")," and uncomment the line ",(0,r.kt)("inlineCode",{parentName:"p"},"PubkeyAuthentication yes"),". You may choose to\nset ",(0,r.kt)("inlineCode",{parentName:"p"},"PasswordAuthentication no")," if you want. Set the following permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod 700 .ssh\nsudo chmod 600 .ssh/authorized_keys\n")),(0,r.kt)("p",null,"Restart the ssh service on remote host"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo service ssh restart\n")),(0,r.kt)("p",null,"Now you can connect from your local computer using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh pranab@xxx.xx.x.xxx -p yyyy -i ~/.ssh/id_rsa\n")),(0,r.kt)("p",null,"Copying files via scp from remote to local or vice-versa:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scp remote_username@10.10.0.2:/remote/file.txt /local/directory\nscp file.txt remote_username@10.10.0.2:/remote/directory\n")),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"scp")," to transfer files as well using ssh-keys:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scp -i ~/.ssh/id_rsa remote_username@10.10.0.2:/remote/file.txt /local/directory\nscp -P yyyy -i ~/.ssh/id_rsa file.txt remote_username@10.10.0.2:remote/directory\n")),(0,r.kt)("p",null,"We can secure copy a directory using ",(0,r.kt)("inlineCode",{parentName:"p"},"-r")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'scp -i "ssh_key.pem" -r ~/Documents/mydir user@domain.com:Downloads/mydir\n')),(0,r.kt)("h2",{id:"diff"},"diff"),(0,r.kt)("p",null,"Compare two files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"diff file.txt file_new.txt\n")),(0,r.kt)("p",null,"Compare two folders:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"diff -rq folder folder_new\n")),(0,r.kt)("p",null,"Here the ",(0,r.kt)("inlineCode",{parentName:"p"},"q")," flag is for the brief mode, otherwise it would not only show which\nfiles are different but also show line-by-line differences."),(0,r.kt)("h2",{id:"openssl"},"openssl"),(0,r.kt)("p",null,"There are various encription options available in openssl. In the above, we have\nused AES-256 (Advanced Encryption Standard with 256 bit key length) symmetric\nencryption in CBC (Cipher Blocker Chaining) mode, used salt hashing, pbkdf2\n(Password-Based Key Derivation Function 2) key stretching, and armor output\n(",(0,r.kt)("inlineCode",{parentName:"p"},"-a"),"). Check openssl documentation for more details."),(0,r.kt)("p",null,"Some good set of options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# to encrypt\nopenssl enc -e -aes-256-cbc \\\n  -salt \\\n  -pbkdf2 \\\n  -iter 1000000 \\\n  -md sha512 \\\n  -base64 \\\n  -in somefile.txt \\\n  -out somefile.enc\n\n# to decrypt\nopenssl enc -d -aes-256-cbc \\\n  -salt \\\n  -pbkdf2 \\\n  -iter 1000000 \\\n  -md sha512 \\\n  -base64 \\\n  -in somefile.enc \\\n  -out somefile.txt\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It is very important to write down which encryption options you use in order to\ndecrypt them. Default options may not be the best choice."),(0,r.kt)("p",{parentName:"admonition"},"The ASCII armor (base64) output will increase the file size. If you don't need\nto copy and pase the output (say, you need to send via an email message), it is\nbetter to leave them as binary."),(0,r.kt)("p",{parentName:"admonition"},"If you are going to compress your data, you should do it before encrypting.\nAfter encryption, it is basically random gibberish which won't benefit from\ncompression algorithms (e.g., dictionary based compression)."),(0,r.kt)("p",{parentName:"admonition"},"You can also use ",(0,r.kt)("a",{parentName:"p",href:"./pgp"},"GPG")," program to perform symmetric encryption.")),(0,r.kt)("p",null,"For on the fly encryption and decryption with terminal input and output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'openssl enc -e -aes-256-cbc \\\n  -salt \\\n  -pbkdf2 \\\n  -iter 1000000 \\\n  -md sha512 \\\n  -base64 <<< "Secret message."\n\nopenssl enc -d -aes-256-cbc \\\n  -salt \\\n  -pbkdf2 \\\n  -iter 1000000 \\\n  -md sha512 \\\n  -base64 <<< "U2FsdGVkX18Y9d6MT+d8kbrmfsgd1j/vnNlZ5T7LQ6I="\n')),(0,r.kt)("p",null,"If you are on Windows, you can get OpenSSL by installing git. You can consider\nhaving the ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/download/win"},"portable git version")," if you don't\nneed to install git in your computer. Run using full path to executable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"'C:\\Program Files\\Git\\usr\\bin\\openssl.exe'")," if the bin directory is not added\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable."),(0,r.kt)("h2",{id:"file-permissions"},"File permissions"),(0,r.kt)("p",null,"When we list a file using ",(0,r.kt)("inlineCode",{parentName:"p"},"ls -la")," or similar, we see permissions strings. What\ndoes they mean?"),(0,r.kt)("p",null,"r \u2192 read ",(0,r.kt)("br",null),"\nw \u2192 write ",(0,r.kt)("br",null),"\nx \u2192 execute ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"and they are listed for user, group, and others. We can set the file permissions\nby using numeric conventions. r=4, w=2, and x=1. Say we want to set ",(0,r.kt)("inlineCode",{parentName:"p"},"rwx"),"\nfor user, ",(0,r.kt)("inlineCode",{parentName:"p"},"rx")," for group and only ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," for others, we can set that by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod 751 file.sh\n")),(0,r.kt)("p",null,"Alternatively, in symbolic notation, we can assign or add or remove permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod u=rwx, g=rx, o= file.sh\nchmod u+x file.sh\nchmod g-x file.sh\n")),(0,r.kt)("p",null,"We can change file permissions recursively as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod -R ugo-x /home/pranab\nchmod -R a-x /home/pranab\n")),(0,r.kt)("p",null,"Make a script file executable:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a file filename.sh"),(0,r.kt)("li",{parentName:"ol"},"Write down your script"),(0,r.kt)("li",{parentName:"ol"},"Make the file executable: ",(0,r.kt)("inlineCode",{parentName:"li"},"chmod +x filename.sh")),(0,r.kt)("li",{parentName:"ol"},"Run the script: ",(0,r.kt)("inlineCode",{parentName:"li"},"./filename.sh"))),(0,r.kt)("h2",{id:"rsync"},"rsync"),(0,r.kt)("p",null,"It can be used to mirror/copy files and folders in a local machine as well as\nto / from remote machines. It is a very powerful tool with lots of options and\ncustomizations. Here are few common ones:"),(0,r.kt)("p",null,"Copy / sync files locally:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rsync -avh backup.tar /tmp/backups/\n")),(0,r.kt)("p",null,"Copy folders locally:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rsync -avh /root/rpmpkgs /tmp/backups/\nrsync -avh /root/rpmpkgs/ /tmp/backups/rpmpkgs\n")),(0,r.kt)("p",null,"Copy files over ssh:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'rsync -avzhe "ssh -i ~/.ssh/id_rsa -p yyyy" pranab@xxx.xx.x.xxx:file.txt ~/Desktop/\nrsync -avzhe "ssh -i ~/.ssh/id_rsa -p yyyy" ~/Desktop/file.txt pranab@xxx.xx.x.xxx:docs\n')),(0,r.kt)("p",null,"By default rsync won't remove deleted files from the destination. If you want to\ndelete:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rsync -avh --delete /home/file.txt /usr/desktop/\n")),(0,r.kt)("p",null,"While using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--delete")," flag, it is a good idea to first run the command with\n",(0,r.kt)("inlineCode",{parentName:"p"},"--dry-run")," flag to see the changes before actually deleting the files. The\n",(0,r.kt)("inlineCode",{parentName:"p"},"--dry-run")," flag let you see the output without actually applying the command."),(0,r.kt)("p",null,"Exclude a file or directory from syncing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rsync -avh --delete --exclude .git /home/my-project/ /mnt/d/my-project\nrsync -avh --delete --exclude *.iso /home/my-project/ /mnt/d/my-project\nrsync -avh --max-size=500m /home/my-project/ /mnt/d/my-project\nrsync -avh --exclude={'*.log','dir-x','dir-y'} /home/my-project/ /mnt/d/my-project\nrsync -avh --exclude-from='exclude.txt' /home/my-project/ /mnt/d/my-project\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"exclude.txt")," contains list of files and directories:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="exclude.txt"',title:'"exclude.txt"'},".gitignore\n.git\n*.log\ntest*\n")),(0,r.kt)("p",null,"Commonly used flags:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flags"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-v"),(0,r.kt)("td",{parentName:"tr",align:null},"verbose")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-r"),(0,r.kt)("td",{parentName:"tr",align:null},"copies data recursively, doesn\u2019t preserve timestamps and permission")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-a"),(0,r.kt)("td",{parentName:"tr",align:null},"archive mode, copies recursively and preserves ownerships and timestamps")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-z"),(0,r.kt)("td",{parentName:"tr",align:null},"compress data while transferring")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-h"),(0,r.kt)("td",{parentName:"tr",align:null},"human-readable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-e"),(0,r.kt)("td",{parentName:"tr",align:null},"with protocol option.")))),(0,r.kt)("p",null,"If you are looking for more advanced and secure backup options, check out\n",(0,r.kt)("a",{parentName:"p",href:"https://borgbackup.readthedocs.io/en/stable/"},"https://borgbackup.readthedocs.io/en/stable/")),(0,r.kt)("h2",{id:"processes"},"Processes"),(0,r.kt)("p",null,"See processes in the current shell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ps\n")),(0,r.kt)("p",null,"Show all processes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ps -ef\n")),(0,r.kt)("p",null,"Show all processes of all users"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ps -aux\nps -aux | head -10\n")),(0,r.kt)("p",null,"You can exit by typing ",(0,r.kt)("inlineCode",{parentName:"p"},"q"),". You can press ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," and provide PID to kill a process."),(0,r.kt)("p",null,"You can kill a process by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kill -SIGKILL <pid>\n")),(0,r.kt)("p",null,"On the command line, you can terminate a command by ",(0,r.kt)("inlineCode",{parentName:"p"},"CTRL+C")," or suspend by\n",(0,r.kt)("inlineCode",{parentName:"p"},"CTRL+Z"),"."),(0,r.kt)("p",null,"View process tree:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ps tree\n")),(0,r.kt)("p",null,"Check load balance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"top\n")),(0,r.kt)("h2",{id:"tmux"},"tmux"),(0,r.kt)("p",null,"tmux has many use case scenarios, one them is running something on a remote\nmachine without interruption. Say you are working on a remote machine over ssh,\nand you need to update your remote machine. The updating process can be\ncatastrophic if it is interrupted, it can leave your system on a broken state.\nTherefore it is a good idea to run the process using tmux so that even if you\nare disconnected from the ssh session, the process can continue."),(0,r.kt)("p",null,"Installing tmux:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install tmux\n")),(0,r.kt)("p",null,"Launch a tmux window:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tmux\n")),(0,r.kt)("p",null,"Run a process/command there. Now we can detach from tmux using keyboard\nshortcut: first send the tmux bind-key ",(0,r.kt)("inlineCode",{parentName:"p"},"[control] + [b]")," followed by ",(0,r.kt)("inlineCode",{parentName:"p"},"[d]"),".\nNow we get back our main terminal. We can create multiple tmux sessions. We can\nlist tmux sessions by:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tmux ls\n")),(0,r.kt)("p",null,"We can attach particular session:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tmux attach -c 2\n")),(0,r.kt)("p",null,"Or attach the last working session or if there is only one session:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tmux attach\n")),(0,r.kt)("p",null,"When we are in one of tmux window, we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"[control] + [b]")," followed by\n",(0,r.kt)("inlineCode",{parentName:"p"},"[w]")," for tmux window list."),(0,r.kt)("p",null,"We can exit the tmux session by typing ",(0,r.kt)("inlineCode",{parentName:"p"},"exit")," on the tmux window. Or when we are\nin main terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tmux kill-session -t 0\n")),(0,r.kt)("h2",{id:"terminal-shortcuts"},"Terminal shortcuts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Shortcuts"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + A"),(0,r.kt)("td",{parentName:"tr",align:null},"Move to the beginning of a line")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + E"),(0,r.kt)("td",{parentName:"tr",align:null},"Move to the end of a line")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + K"),(0,r.kt)("td",{parentName:"tr",align:null},"Kill/delete/cut from the cursor to the end")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + U"),(0,r.kt)("td",{parentName:"tr",align:null},"Delete from the cursor to the start of the line")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Ctrl + X + Backspace"),(0,r.kt)("td",{parentName:"tr",align:null},"removes all the text from the cursor to the beginning")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + W"),(0,r.kt)("td",{parentName:"tr",align:null},"Delete from cursor to the start of word")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Undo last deletion")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALT + Left arrow"),(0,r.kt)("td",{parentName:"tr",align:null},"Move left one word")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALT + Right arrow"),(0,r.kt)("td",{parentName:"tr",align:null},"Move right one word")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + L"),(0,r.kt)("td",{parentName:"tr",align:null},"Clear screen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + C"),(0,r.kt)("td",{parentName:"tr",align:null},"Terminate the foreground process")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Suspend the foreground process")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CTRL + D"),(0,r.kt)("td",{parentName:"tr",align:null},"Exit shell.")))),(0,r.kt)("h2",{id:"learn-more"},"Learn more"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/jlevy/the-art-of-command-line"},"Art of commandline")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.ibm.com/technologies/linux/series/learn-linux-101/"},"IBM Linux tutorials")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"The Linux command line: a complete introduction")," by ",(0,r.kt)("em",{parentName:"li"},"William E. Shotts"),".")))}c.isMDXComponent=!0}}]);