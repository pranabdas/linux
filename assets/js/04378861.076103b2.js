"use strict";(self.webpackChunklinux_tutorial=self.webpackChunklinux_tutorial||[]).push([[103],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9313:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),l=["components"],i={title:"Linux filesystem",sidebar_label:"Filesystem"},s=void 0,p={unversionedId:"filesystem",id:"filesystem",title:"Linux filesystem",description:"The information about your system partitions can be found in the file",source:"@site/docs/filesystem.md",sourceDirName:".",slug:"/filesystem",permalink:"/linux/filesystem",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/linux/blob/main/docs/filesystem.md",tags:[],version:"current",frontMatter:{title:"Linux filesystem",sidebar_label:"Filesystem"},sidebar:"docs",previous:{title:"Setup related",permalink:"/linux/setup"},next:{title:"Network setup",permalink:"/linux/network-setup"}},u={},c=[{value:"dd : duplicate disc using Ubuntu bootable USB",id:"dd--duplicate-disc-using-ubuntu-bootable-usb",level:3},{value:"Disk partitioning",id:"disk-partitioning",level:3},{value:"Resources",id:"resources",level:3}],d={toc:c},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The information about your system partitions can be found in the file\n",(0,r.kt)("inlineCode",{parentName:"p"},"/proc/partition"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cat /proc/partitions\n\nmajor minor  #blocks  name\n\n   7        0      56264 loop0\n   7        1      63580 loop1\n   7        2     246576 loop2\n   7        3      50980 loop3\n   7        4      27740 loop4\n   7        5      30992 loop5\n   7        6      56648 loop6\n   7        7      50980 loop7\n  11        0    1048575 sr0\n   8        0   41943040 sda\n   8        1     524288 sda1\n   8        2          1 sda2\n   8        5   41415680 sda5\n   7        8     223124 loop8\n")),(0,r.kt)("p",null,"There are multiple ways to know about the partitions. Another command is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fdisk -l\n")),(0,r.kt)("p",null,"Another is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ lsblk\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nloop0    7:0    0    55M  1 loop /snap/core18/1705\nloop1    7:1    0  55.3M  1 loop /snap/core18/1885\nloop2    7:2    0 240.8M  1 loop /snap/gnome-3-34-1804/24\nloop3    7:3    0 217.9M  1 loop /snap/gnome-3-34-1804/60\nloop4    7:4    0  62.1M  1 loop /snap/gtk-common-themes/1506\nloop5    7:5    0  49.8M  1 loop /snap/snap-store/433\nloop6    7:6    0  49.8M  1 loop /snap/snap-store/467\nloop7    7:7    0  27.1M  1 loop /snap/snapd/7264\nloop8    7:8    0  30.3M  1 loop /snap/snapd/9279\nsda      8:0    0    40G  0 disk\n\u251c\u2500sda1   8:1    0   512M  0 part /boot/efi\n\u251c\u2500sda2   8:2    0     1K  0 part\n\u2514\u2500sda5   8:5    0  39.5G  0 part /\nsr0     11:0    1  1024M  0 rom\n")),(0,r.kt)("p",null,"Check the partitions that are mounted on boot:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/fstab\n")),(0,r.kt)("p",null,"Amount of free space available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"df\ndf -h\n")),(0,r.kt)("p",null,"Check filesystem types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"df -Th\n")),(0,r.kt)("p",null,"Formatting a partition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkfs -t ext4 /dev/sdb3\n")),(0,r.kt)("p",null,"Mounting a filesystem: it maps the filesystem with a directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mount /dev/sdb3 /newdrive\n")),(0,r.kt)("p",null,"Mounting Windows network drive in WSL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /mnt/k\nsudo mount -t drvfs K: /mnt/k\n")),(0,r.kt)("p",null,"CPU info:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat /proc/cpuinfo\n")),(0,r.kt)("p",null,"RAM info:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"free\n")),(0,r.kt)("h3",{id:"dd--duplicate-disc-using-ubuntu-bootable-usb"},"dd : duplicate disc using Ubuntu bootable USB"),(0,r.kt)("p",null,"You may need to set legacy boot option in the BIOS. By making a clone of a full\ndisc of Windows 10 machine, I was able to boot from the new drive:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dd if=/dev/sda of=/dev/sdb conv=sync,noerror bs=1M status=progress\n\n# the above option will copy byte by byte, you will need disc with same\n# or higher capacity.\n\n# the below option to compress the data\nsudo dd if=/dev/sda bs=1M conv=sync,noerror | gzip -c > /path/to/backup.img.gz\ngunzip -c /path/to/backup.img.gz | sudo dd of=/dev/sdb status=progress bs=1M\n")),(0,r.kt)("p",null,"Note that optimal block size may not be 1MB for all drives, and should be found\nout by running tests/ benchmarks."),(0,r.kt)("h3",{id:"disk-partitioning"},"Disk partitioning"),(0,r.kt)("p",null,"Check overview of current partition table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fdisk -l\n")),(0,r.kt)("p",null,"We will work on a partition that is not in the boot device. We can specifically\ncheck the a certain device:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fdisk -l /dev/sdb\n")),(0,r.kt)("p",null,"We will partition the device ",(0,r.kt)("inlineCode",{parentName:"p"},"/dev/sdb"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fdisk /dev/sdb\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To get a list of all available commands enter ",(0,r.kt)("inlineCode",{parentName:"li"},"m")),(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("inlineCode",{parentName:"li"},"p")," command to list the current partition scheme"),(0,r.kt)("li",{parentName:"ul"},"Enter ",(0,r.kt)("inlineCode",{parentName:"li"},"g")," to create a new empty GPT partition table"),(0,r.kt)("li",{parentName:"ul"},"Enter ",(0,r.kt)("inlineCode",{parentName:"li"},"n")," command to create a new partition. We will choose default values for\npartition number and first sector. Here we want to create a partition size of\n20GB, so we will enter ",(0,r.kt)("inlineCode",{parentName:"li"},"+20G")," as the last sector input."),(0,r.kt)("li",{parentName:"ul"},"Save the changes by running the ",(0,r.kt)("inlineCode",{parentName:"li"},"w")," command.")),(0,r.kt)("h3",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://linuxize.com/post/fdisk-command-in-linux/"},"https://linuxize.com/post/fdisk-command-in-linux/"))))}f.isMDXComponent=!0}}]);