"use strict";(self.webpackChunklinux_tutorial=self.webpackChunklinux_tutorial||[]).push([["817"],{7785:function(e,n,a){a.r(n),a.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>t,assets:()=>c,toc:()=>l,contentTitle:()=>o});var t=JSON.parse('{"id":"jq","title":"jq: CLI JSON processor","description":"Parse object:","source":"@site/docs/jq.md","sourceDirName":".","slug":"/jq","permalink":"/linux/jq","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/linux/blob/main/docs/jq.md","tags":[],"version":"current","frontMatter":{"title":"jq: CLI JSON processor","sidebar_label":"jq"},"sidebar":"docs","previous":{"title":"SELinux","permalink":"/linux/selinux"},"next":{"title":"PGP Encryption","permalink":"/linux/pgp"}}'),r=a("5893"),s=a("65");let i={title:"jq: CLI JSON processor",sidebar_label:"jq"},o=void 0,c={},l=[{value:"Resources",id:"resources",level:2}];function d(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Parse object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'json=\'{\n  "name": "Alice",\n  "age": 30,\n  "city": "New York"\n}\'\n\nname=$(echo "$json" | jq -r \'.name\')\nage=$(echo "$json" | jq -r \'.age\')\ncity=$(echo "$json" | jq -r \'.city\')\n\necho "$name is $age years old and lives in $city"\n# Alice is 30 years old and lives in New York\n'})}),"\n",(0,r.jsx)(n.p,{children:"jq can directly read from file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cat > data.txt << EOF\n{\n  "name": "Alice",\n  "age": 30,\n  "city": "New York"\n}\nEOF\n\nname=$(jq \'.name\' data.txt)\nage=$(jq \'.age\' data.txt)\ncity=$(jq \'.city\' data.txt)\n\necho "$name is $age years old and lives in $city"\nrm data.txt\n'})}),"\n",(0,r.jsx)(n.p,{children:"Or read from API endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"name=$( curl -s https://api.github.com/users/pranabdas | jq -r '.name' )\nlocation=$( curl -s https://api.github.com/users/pranabdas | jq -r '.location' )\necho \"$name is from $location.\"\n# Pranab Das is from Singapore.\n"})}),"\n",(0,r.jsx)(n.p,{children:"Iterate over an array of items:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cat > data.txt << EOF\n[\n  {\n    "name": "Alice",\n    "age": 30\n  },\n  {\n    "name": "Bob",\n    "age": 35\n  }\n]\nEOF\n\njq -c \'.[]\' data.txt | while read -r item; do\n  name=$(echo "$item" | jq -r \'.name\')\n  age=$(echo "$item" | jq -r \'.age\')\n  echo "Name: $name, Age: $age"\ndone\nrm data.txt\n'})}),"\n",(0,r.jsx)(n.p,{children:"In case of arbitrary key in an object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'json=\'{\n  "name": "Alice",\n  "age": 30,\n  "city": "New York"\n}\'\n\necho "$json" | jq -r \'to_entries[] | "\\(.key)=\\(.value)"\' | while IFS=\'=\' read -r key value; do\n  echo "key: $key, value: $value"\ndone\n'})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://jqlang.org",children:"jqlang.org"})}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65:function(e,n,a){a.d(n,{Z:function(){return o},a:function(){return i}});var t=a(7294);let r={},s=t.createContext(r);function i(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);