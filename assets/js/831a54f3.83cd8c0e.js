"use strict";(self.webpackChunklinux_tutorial=self.webpackChunklinux_tutorial||[]).push([[188],{1004:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var s=a(4848),i=a(8453);const r={title:"Managing public key infrastructure",sidebar_label:"Key management",keywords:["linux","openssl","tls"]},t=void 0,c={id:"key-management",title:"Managing public key infrastructure",description:"Generate keys",source:"@site/docs/key-management.md",sourceDirName:".",slug:"/key-management",permalink:"/linux/key-management",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/linux/blob/main/docs/key-management.md",tags:[],version:"current",frontMatter:{title:"Managing public key infrastructure",sidebar_label:"Key management",keywords:["linux","openssl","tls"]},sidebar:"docs",previous:{title:"Network security",permalink:"/linux/network-security"},next:{title:"Apache",permalink:"/linux/apache"}},l={},o=[{value:"Generate keys",id:"generate-keys",level:2},{value:"Certificate Signing Request",id:"certificate-signing-request",level:2},{value:"Self-sign certificates",id:"self-sign-certificates",level:2},{value:"Use CA to sign",id:"use-ca-to-sign",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"generate-keys",children:"Generate keys"}),"\n",(0,s.jsx)(n.p,{children:"Generate 2048 bit RSA key using openssl:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -out private.key 2048\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Key with larger bit (say, RSA 4096) are more secure but it comes with additional\ncomputing overhead for encryption and decryption."})}),"\n",(0,s.jsx)(n.p,{children:"The key generated in the above command contains both private and the public\nkeys. Extract the public key:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl rsa -pubout -in private.key\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We can encrypt the ",(0,s.jsx)(n.code,{children:"private.key"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -aes256 -out private.key 2048\n"})}),"\n",(0,s.jsx)(n.p,{children:"Convert an encrypted key to a un-encrypted file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl rsa -in private.key -out unencrypted.key\n"})}),"\n",(0,s.jsx)(n.p,{children:"Inspect other details in a private key:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl rsa -text -in private.key\n"})}),"\n",(0,s.jsx)(n.h2,{id:"certificate-signing-request",children:"Certificate Signing Request"}),"\n",(0,s.jsx)(n.p,{children:"Create CSR (interactively):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -new -key private.key -out domain.example.com.csr\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create CSR non-interactively:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl req -new -key private.key -noenc \\\n  -subj \'/CN=example.com/O=Example Inc./OU=Engineering/C=US/ST=California/L=San Francisco/emailAddress=email@example.com\' \\\n  -addext "keyUsage = digitalSignature,keyAgreement" \\\n  -addext "extendedKeyUsage = serverAuth, clientAuth" \\\n  -out example.com.csr\n'})}),"\n",(0,s.jsx)(n.p,{children:"Create private key and csr together:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -new -noenc \\\n  -subj '/CN=domain.example.com/O=Example Ltd/C=SG/L=Singapore' \\\n  -newkey rsa:2048 -keyout private2.key -out domain2.example.com.csr\n"})}),"\n",(0,s.jsx)(n.h2,{id:"self-sign-certificates",children:"Self-sign certificates"}),"\n",(0,s.jsx)(n.p,{children:"Self-signed certificates are intended for testing and development purposes only.\nGenerate a self-signed certificate for root of trust:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -x509 -days 365 -noenc \\\n  -subj '/CN=ROOT/O=ROOT/C=SG/L=Singapore' -key private.key -out ca.crt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Use the self-signed root signing certificate to generate a signed certificate\nfrom the certificate request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl x509 -req -in domain.example.com.csr -days 365 -CA ca.crt \\\n  -CAkey private.key -CAcreateserial -out domain.example.com.crt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Do all the above in a single step:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -new -x509 -days 365 -noenc -newkey rsa:2048 -keyout private.key \\\n  -out public.crt -subj '/CN=domain.example.com/O=Example Ltd/C=SG/L=Singapore'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"use-ca-to-sign",children:"Use CA to sign"}),"\n",(0,s.jsx)(n.p,{children:"For production usage, we should be using a third-party CA authority. In case of\na own CA implementation, we could use a separate root or intermediatory CA key\nand certificate to sign. Better care should be taken when creating a root\ncertificate, e.g., a larger size key and encrypt the key file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -out ca.key -aes256 8192\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generate CA public certificate:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -x509 -new -extensions v3_ca -key ca.key -days 365 -out ca.crt \\\n  -subj '/CN=ca.example.com/O=CA Inc./C=SG/L=Singapore'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Sign CSR:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl x509 -req -in domain.example.com.csr -CA ca.crt -CAkey ca.key \\\n  -out domain.example.com.crt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl verify -CAfile ca.crt domain.example.com.crt\n"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pranabdas.github.io/drive/documents/linux-manuals/Oracle-linux--managing-TLS-certificates.pdf",children:"Oracle manual: Managing Certificates and Public Key Infrastructure"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pranabdas.github.io/drive/documents/linux-manuals/red_hat_securing_networks.pdf",children:"RedHat manual: Securing networks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pranabdas.github.io/drive/documents/technical-articles/Securing-MongoDB-Cluster-with-TLS.pdf",children:"Securing MongoDB Cluster with TLS"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>c});var s=a(6540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);