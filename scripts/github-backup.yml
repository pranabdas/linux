name: Build docs, deploy and mirror

on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - main

jobs:
  backup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4

      - name: Backup
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
          wget \
          zip

          wget https://prerelease.keybase.io/keybase_amd64.deb
          sudo apt install -y --no-install-recommends ./keybase_amd64.deb
          run_keybase -g &> /dev/null
          keybase oneshot -u ${{ secrets.KEYBASE_USER_NAME }} --paperkey "${{ secrets.KEYBASE_PAPER_KEY }}"

          BACKUP_FOLDER=github_backup_$(date +'%Y%m%d')
          export PY_BACKUP_FOLDER="/keybase/public/${{ secrets.KEYBASE_USER_NAME }}/github_backups/${BACKUP_FOLDER}.zip"

          IS_KEYBASE_FOLDER_EXISTS=`python3 << EOF
          import subprocess
          import os
          result = subprocess.run(['keybase', 'fs', 'ls', os.environ['PY_BACKUP_FOLDER']], capture_output=True, text=True).stdout.strip()
          if (result == ''):
              print('FALSE')
          else:
              print('TRUE')
          EOF`

          if [ ${IS_KEYBASE_FOLDER_EXISTS} = 'TRUE' ]; then
            echo "Folder already exists."
          else
            mkdir ${BACKUP_FOLDER} && cd $_

            repo_list=()
            repo_list+=(Access-OneDrive-via-Microsoft-Graph-Python)
            repo_list+=(arpes-manual)
            repo_list+=(arpespythontools)
            repo_list+=(c-cpp)
            repo_list+=(cheatsheets)
            repo_list+=(condmat-notes)
            repo_list+=(deploy-jekyll-github-action)
            repo_list+=(dotfiles)
            repo_list+=(espresso)
            repo_list+=(fortran)
            repo_list+=(fullprof)
            repo_list+=(github-emoji-assets)
            repo_list+=(gnu-c-intro-ref)
            repo_list+=(grid)
            repo_list+=(javascript)
            repo_list+=(LaTeX)
            repo_list+=(linux)
            repo_list+=(machine-learning)
            repo_list+=(openmx)
            repo_list+=(openssl.vim)
            repo_list+=(orientx)
            repo_list+=(passphrase)
            repo_list+=(planets)
            repo_list+=(pranab)
            repo_list+=(python-tutorial)
            repo_list+=(react-learning)
            repo_list+=(retasks)
            repo_list+=(rust)
            repo_list+=(sg-tax-calculator)
            repo_list+=(sg-traffic-camera)
            repo_list+=(suvapp)
            repo_list+=(suvtools)
            repo_list+=(vim-gnupg)
            repo_list+=(wasm-rust-react)
            repo_list+=(xps)

            for repo in "${repo_list[@]}"
            do mkdir ${repo}
              cd ${repo}
              git clone --mirror https://github.com/pranabdas/${repo}.git .git
              git config --unset core.bare
              git reset --hard
              cd ..
            done
            cd ..
            zip -r ${BACKUP_FOLDER}.zip ${BACKUP_FOLDER}

            keybase fs cp ${BACKUP_FOLDER}.zip /keybase/public/${{ secrets.KEYBASE_USER_NAME }}/github_backups
            while :
            do
              KEYBASE_STATUS=`keybase fs uploads`
              KEYBASE_STATUS=`echo ${KEYBASE_STATUS} | sed 's/\ /-/g' | sed 's/:/-/g'`
              COMPLETED_STATUS="There-are-currently-no-uploads-in-progress"

              if [ "${KEYBASE_STATUS}" = "${COMPLETED_STATUS}" ]; then
                break
              fi

              sleep 15s
            done
          fi
